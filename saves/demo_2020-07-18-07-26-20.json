{"editors":"[\"3kgvx\",\"37dsp\",\"4jx4j\",\"kjd2\",\"39jpk\"]","editor_3kgvx":"{\"id\":\"3kgvx\",\"title\":\"demo\",\"value\":\"import clip from '/dsp/softclip/index.js'\\nimport { sin, saw } from '/dsp/osc/index.js'\\nimport arp from '/dsp/arp.js'\\nimport envelope from '/dsp/envelope/index.js'\\n\\nexport default async (context) => {\\n  const hihat = await Hihat(context)\\n  const bass = await Bass(context)\\n  return t => 0\\n    // + kick(t)\\n    // + hihat(t)\\n    + bass(t)\\n}\\n\\nexport const kick = t => {\\n  var kick =\\n    + sin(t, 19.5) * arp(t, 1/4, 37, 31, 13)\\n    + (arp(t, 1/4, 38.5, 48, 40)\\n    + arp(t, 1/4, 35, 49, 40))\\n    * envelope(t, 1/4, 42, 42, 20) * 1\\n  kick = clip(kick, 1)\\n  return kick * .8\\n}\\n\\n// import arp from '/dsp/arp.js'\\n// import envelope from '/dsp/envelope/index.js'\\n// import clip from '/dsp/softclip/index.js'\\nimport Wavetable from '/dsp/wavetable-osc/index.js'\\n\\nexport const Hihat = async (context) => {\\n  var hihat = 0\\n  var hihat_osc = Wavetable(context, 'noise', 5000, true)\\n  var hihat_delay = Array(100).fill(0)\\n\\n  return t => {\\n    hihat = hihat_osc(2)\\n    hihat *= arp(t, 1/16, 5200, 20, 70)\\n    //hihat *= envelope(t+1/16, 1/16, 100, 3.8, 8, 70)\\n    hihat = clip(hihat, .61)\\n    hihat *= arp(t, 1/4, 10100, 17, 1)\\n    hihat_delay.push(-hihat)\\n    hihat_delay.shift()\\n    return (\\n      + hihat\\n      + hihat_delay[98] * .8\\n      + hihat_delay[69] * .7\\n      - hihat_delay[25] * .5\\n      - hihat_delay[72] * .7\\n    ) * .3\\n  }\\n}\\n\\n`BASS`\\n\\n\\n\\nimport note from '/dsp/note/index.js'\\n// import arp from '/dsp/arp.js'\\n// import clip from '/dsp/softclip/index.js'\\n// import { sin } from '/dsp/osc/index.js'\\n// import Wavetable from '/dsp/wavetable-osc/index.js'\\n\\nexport var bassline = [\\n  'c1','c1','f#1','b0',\\n  'c1','c1','f#1','b0',\\n  // 'd#0','d#0','f1','b2',\\n  // 'd#1','d#1','f4','b3',\\n  // 'e0','e0','a0','c0',\\n].map(note)//.reverse()\\n\\nvar bass_synth = (t, osc, hz) => {\\n  hz *= 1\\n  var out = (\\n    // + osc(hz) * .78\\n    + saw(t, hz*1.6) * .1\\n      // + saw(t, hz*1.004) * .42\\n      // + saw(t, hz/2) * .62\\n      // + sin(t, hz) * .3\\n  )\\n  out = out * (arp(t+1.5, 1/16, .5, 30 + sin(t, .05) * 20, 4) * arp(t+1.5, 1/4, 2, 6, 2))\\n  return out\\n}\\n\\nexport const Bass = async (context) => {\\n  var bass = 0\\n  var bass_osc = Wavetable(context, 'saw', 120, true)\\n  var bass_delay = Array(800).fill(0)\\n\\n  return t => {\\n    var bass_hz = bassline[Math.floor( (t*4) % 8 )]*2\\n    bass = bass_synth(t, bass_osc, bass_hz)\\n    bass_delay.push(-bass)\\n    bass_delay.shift()\\n\\n    return clip(0\\n      + bass\\n      - bass_delay[2+Math.floor(t%5)]\\n      - bass_delay[Math.floor(t%18)]\\n      + bass_delay[56] * .7\\n      // - bass_delay[10]\\n      - bass_delay[22] * .2\\n      + bass_delay[48] * .4\\n      // - bass_delay[46]\\n      // - bass_delay[34]\\n      // - bass_delay[44]\\n      , .18) * .13\\n  }\\n}\\n\",\"controlEditor\":{\"id\":\"3kgvx\",\"title\":\"demo\"}}","editor_37dsp":"{\"id\":\"37dsp\",\"title\":\"demo-1\",\"value\":\"import clip from '/dsp/softclip/index.js'\\nimport { sin } from '/dsp/osc/index.js'\\nimport arp from '/dsp/arp.js'\\nimport envelope from '/dsp/envelope/index.js'\\n\\nexport default async (context) => {\\n  const hihat = await Hihat(context)\\n  const bass = await Bass(context)\\n  return t => 0\\n    + kick(t)\\n    // + hihat(t)\\n    // + bass(t)\\n}\\n\\nexport const kick = t => {\\n  var kick =\\n    + sin(t, 19.5) * arp(t, 1/4, 37, 31, 13)\\n    + (arp(t, 1/4, 38.5, 48, 40)\\n    + arp(t, 1/4, 35, 49, 40))\\n    * envelope(t, 1/4, 42, 42, 20) * 1\\n  kick = clip(kick, 1)\\n  return kick * .8\\n}\\n\\n// import arp from '/dsp/arp.js'\\n// import envelope from '/dsp/envelope/index.js'\\n// import clip from '/dsp/softclip/index.js'\\nimport Wavetable from '/dsp/wavetable-osc/index.js'\\n\\nexport const Hihat = async (context) => {\\n  var hihat = 0\\n  var hihat_osc = Wavetable(context, 'noise', 5000, true)\\n  var hihat_delay = Array(100).fill(0)\\n\\n  return t => {\\n    hihat = hihat_osc(2)\\n    hihat *= arp(t, 1/16, 5200, 20, 70)\\n    //hihat *= envelope(t+1/16, 1/16, 100, 3.8, 8, 70)\\n    hihat = clip(hihat, .61)\\n    hihat *= arp(t, 1/4, 10100, 17, 1)\\n    hihat_delay.push(-hihat)\\n    hihat_delay.shift()\\n    return (\\n      + hihat\\n      + hihat_delay[98] * .8\\n      + hihat_delay[69] * .7\\n      - hihat_delay[25] * .5\\n      - hihat_delay[72] * .7\\n    ) * .3\\n  }\\n}\\n\\n`BASS`\\n\\n\\n\\nimport note from '/dsp/note/index.js'\\n// import arp from '/dsp/arp.js'\\n// import clip from '/dsp/softclip/index.js'\\n// import { sin } from '/dsp/osc/index.js'\\n// import Wavetable from '/dsp/wavetable-osc/index.js'\\n\\nexport var bassline = [\\n  'c1','c1','f#1','b0',\\n  'c1','c1','f#1','b0',\\n  // 'd#0','d#0','f1','b2',\\n  // 'd#1','d#1','f4','b3',\\n  // 'e0','e0','a0','c0',\\n].map(note)//.reverse()\\n\\nvar bass_synth = (t, osc, hz) => {\\n  hz *= 1\\n  var out = (\\n    + osc(hz) * .78\\n      // + saw(t, hz*1.6) * .33\\n      // + saw(t, hz*1.004) * .42\\n      // + saw(t, hz/2) * .62\\n      // + sin(t, hz) * .3\\n  )\\n  out = out * (arp(t+1.5, 1/16, .5, 30 + sin(t, .05) * 20, 4) * arp(t+1.5, 1/4, 2, 6, 2))\\n  return out\\n}\\n\\nexport const Bass = async (context) => {\\n  var bass = 0\\n  var bass_osc = Wavetable(context, 'saw', 120, true)\\n  var bass_delay = Array(60).fill(0)\\n\\n  return t => {\\n    var bass_hz = bassline[Math.floor( (t*4) % 8 )]*2\\n    bass = bass_synth(t, bass_osc, bass_hz)\\n    bass_delay.push(-bass)\\n    bass_delay.shift()\\n\\n    return clip(0\\n      + bass\\n      - bass_delay[2+Math.floor(t%5)]\\n      - bass_delay[Math.floor(t%18)]\\n      + bass_delay[56] * .7\\n      // - bass_delay[10]\\n      - bass_delay[22] * .2\\n      + bass_delay[48] * .4\\n      // - bass_delay[46]\\n      // - bass_delay[34]\\n      // - bass_delay[44]\\n      , .18) * .13\\n  }\\n}\\n\",\"controlEditor\":{\"id\":\"37dsp\",\"title\":\"demo-1\"}}","editor_4jx4j":"{\"id\":\"4jx4j\",\"title\":\"demo-2\",\"value\":\"import clip from '/dsp/softclip/index.js'\\nimport { sin } from '/dsp/osc/index.js'\\nimport arp from '/dsp/arp.js'\\nimport envelope from '/dsp/envelope/index.js'\\n\\nexport default async (context) => {\\n  const hihat = await Hihat(context)\\n  const bass = await Bass(context)\\n  return t => 0\\n    // + kick(t)\\n    + hihat((t+1)/4)*.8\\n    + hihat((t+1)/2)*.2\\n    // + bass(t)\\n}\\n\\nexport const kick = t => {\\n  var kick =\\n    + sin(t, 19.5) * arp(t, 1/4, 37, 31, 13)\\n    + (arp(t, 1/4, 38.5, 48, 40)\\n    + arp(t, 1/4, 35, 49, 40))\\n    * envelope(t, 1/4, 42, 42, 20) * 1\\n  kick = clip(kick, 1)\\n  return kick * .8\\n}\\n\\n// import arp from '/dsp/arp.js'\\n// import envelope from '/dsp/envelope/index.js'\\n// import clip from '/dsp/softclip/index.js'\\nimport Wavetable from '/dsp/wavetable-osc/index.js'\\n\\nexport const Hihat = async (context) => {\\n  var hihat = 0\\n  var hihat_osc = Wavetable(context, 'noise', 5000, true)\\n  var hihat_delay = Array(100).fill(0)\\n\\n  return t => {\\n    hihat = hihat_osc(2)\\n    // hihat *= arp(t, 1/16, 5200, 20, 70)\\n    hihat = clip(hihat, .61)\\n    hihat *= arp(t/2, 1/16, 100000, 27, 1)\\n    hihat *= envelope(t, 1/32, 100, 3.8, 8, 70)\\n    hihat_delay.push(-hihat)\\n    hihat_delay.shift()\\n    return (\\n      + hihat\\n      + hihat_delay[98] * .8\\n      + hihat_delay[69] * .7\\n      - hihat_delay[25] * .5\\n      - hihat_delay[72] * .7\\n    ) * .3\\n  }\\n}\\n\\n`BASS`\\n\\n\\n\\nimport note from '/dsp/note/index.js'\\n// import arp from '/dsp/arp.js'\\n// import clip from '/dsp/softclip/index.js'\\n// import { sin } from '/dsp/osc/index.js'\\n// import Wavetable from '/dsp/wavetable-osc/index.js'\\n\\nexport var bassline = [\\n  'c1','c1','f#1','b0',\\n  'c1','c1','f#1','b0',\\n  // 'd#0','d#0','f1','b2',\\n  // 'd#1','d#1','f4','b3',\\n  // 'e0','e0','a0','c0',\\n].map(note)//.reverse()\\n\\nvar bass_synth = (t, osc, hz) => {\\n  hz *= 1\\n  var out = (\\n    + osc(hz) * .78\\n      // + saw(t, hz*1.6) * .33\\n      // + saw(t, hz*1.004) * .42\\n      // + saw(t, hz/2) * .62\\n      // + sin(t, hz) * .3\\n  )\\n  out = out * (arp(t+1.5, 1/16, .5, 30 + sin(t, .05) * 20, 4) * arp(t+1.5, 1/4, 2, 6, 2))\\n  return out\\n}\\n\\nexport const Bass = async (context) => {\\n  var bass = 0\\n  var bass_osc = Wavetable(context, 'saw', 120, true)\\n  var bass_delay = Array(60).fill(0)\\n\\n  return t => {\\n    var bass_hz = bassline[Math.floor( (t*4) % 8 )]*2\\n    bass = bass_synth(t, bass_osc, bass_hz)\\n    bass_delay.push(-bass)\\n    bass_delay.shift()\\n\\n    return clip(0\\n      + bass\\n      - bass_delay[2+Math.floor(t%5)]\\n      - bass_delay[Math.floor(t%18)]\\n      + bass_delay[56] * .7\\n      // - bass_delay[10]\\n      - bass_delay[22] * .2\\n      + bass_delay[48] * .4\\n      // - bass_delay[46]\\n      // - bass_delay[34]\\n      // - bass_delay[44]\\n      , .18) * .13\\n  }\\n}\\n\",\"controlEditor\":{\"id\":\"4jx4j\",\"title\":\"demo-2\"}}","editor_kjd2":"{\"id\":\"kjd2\",\"title\":\"demo-3\",\"value\":\"import clip from '/dsp/softclip/index.js'\\nimport { sin, saw } from '/dsp/osc/index.js'\\nimport arp from '/dsp/arp.js'\\nimport envelope from '/dsp/envelope/index.js'\\n\\nexport default async (context) => {\\n  const hihat = await Hihat(context)\\n  const bass = await Bass(context)\\n  const bass2 = await Bass(context)\\n  return t => 0\\n    // + kick(t)*.6\\n    // + hihat(t/16)\\n    // + hihat(t*4)\\n    // + hihat(t/4)*.55\\n    // + bass(t*50)*.5\\n    + bass(t*20)*1 * sin(t, 1/16)/4\\n    + clip(bass2(t/2), .15)*.14\\n}\\n\\nexport const kick = t => {\\n  var kick =\\n    + sin(t, 19.5) * arp(t, 1/4, 37, 31, 13)\\n    + (arp(t, 1/4, 38.5, 48, 40)\\n    + arp(t, 1/4, 35, 49, 40))\\n    * envelope(t, 1/4, 42, 42, 20) * 1\\n  kick = clip(kick, 1)\\n  return kick * .8\\n}\\n\\n// import arp from '/dsp/arp.js'\\n// import envelope from '/dsp/envelope/index.js'\\n// import clip from '/dsp/softclip/index.js'\\nimport Wavetable from '/dsp/wavetable-osc/index.js'\\n\\nexport const Hihat = async (context) => {\\n  var hihat = 0\\n  var hihat_osc = Wavetable(context, 'noise', 5000, true)\\n  var hihat_delay = Array(30000).fill(0)\\n\\n  return t => {\\n    hihat = hihat_osc(2)\\n    hihat *= arp(t, 1/16, 5200, 20, 70)\\n    //hihat *= envelope(t+1/16, 1/16, 100, 3.8, 8, 70)\\n    hihat = clip(hihat, .61)\\n    hihat *= arp(t, 1/4, 10100, 17, 1)\\n    hihat_delay.push(-hihat)\\n    hihat_delay.shift()\\n    return (\\n      + hihat\\n      + hihat_delay[98] * .8\\n      + hihat_delay[69] * .7\\n      - hihat_delay[25] * .5\\n      - hihat_delay[72] * .7\\n    ) * .3\\n  }\\n}\\n\\n`BASS`\\n\\n\\n\\nimport note from '/dsp/note/index.js'\\n// import arp from '/dsp/arp.js'\\n// import clip from '/dsp/softclip/index.js'\\n// import { sin } from '/dsp/osc/index.js'\\n// import Wavetable from '/dsp/wavetable-osc/index.js'\\n\\nexport var bassline = [\\n  // 'c1','c1','f#1','b0',\\n  // 'c1','c1','f#1','b0',\\n  'd#0','d#0','f1','b2',\\n  'd#1','d#1','f4','b3',\\n  // 'e0','e0','a0','c0',\\n].map(note)//.reverse()\\n\\nvar bass_synth = (t, osc, hz) => {\\n  hz *= 1\\n  var out = (\\n    + osc(hz) * .78\\n    + saw(t, hz*1.6) * 2.33\\n    + saw(t, hz*1.004) * .42\\n    + saw(t, hz/2) * .62\\n    + sin(t, hz) * 2.3\\n  )\\n  out = out * (arp(t+1.5, 1/16, .5, 130 + sin(t, 2.05) * 120, 4) * arp(t+1.5, 1/4, 2, 6, 2))\\n  return out\\n}\\n\\nexport const Bass = async (context) => {\\n  var bass = 0\\n  var bass_osc = Wavetable(context, 'saw', 120, true)\\n  var bass_delay = Array(70).fill(0)\\n\\n  return t => {\\n    var bass_hz = bassline[Math.floor( (t*4) % 8 )]*2\\n    bass = bass_synth(t, bass_osc, bass_hz)\\n    bass_delay.push(-bass)\\n    bass_delay.shift()\\n\\n    return clip(0\\n      + bass\\n      - bass_delay[2+Math.floor(t%5)]\\n      - bass_delay[Math.floor(t%18)]\\n      + bass_delay[56] * .7\\n      // - bass_delay[10]\\n      - bass_delay[22] * .2\\n      + bass_delay[48] * .4\\n      // - bass_delay[46]\\n      // - bass_delay[34]\\n      // - bass_delay[44]\\n      , .18) * .13\\n  }\\n}\",\"controlEditor\":{\"id\":\"kjd2\",\"title\":\"demo-3\"}}","editor_39jpk":"{\"id\":\"39jpk\",\"title\":\"demo-4\",\"value\":\"import clip from '/dsp/softclip/index.js'\\nimport { sin, saw } from '/dsp/osc/index.js'\\nimport arp from '/dsp/arp.js'\\nimport envelope from '/dsp/envelope/index.js'\\n\\nexport default async (context) => {\\n  const hihat = await Hihat(context)\\n  const bass = await Bass(context)\\n  const bass2 = await Bass(context)\\n  return t => 0\\n    // + kick(t)*.6\\n    // + hihat(t/16)\\n    // + hihat(t*4)\\n    // + hihat(t/4)*.55\\n    // + bass(t*50)*.5\\n    // + bass(t*20)*1 * sin(t, 1/16)/4\\n    + clip(bass2(t), .15)*.14\\n}\\n\\nexport const kick = t => {\\n  var kick =\\n    + sin(t, 19.5) * arp(t, 1/4, 37, 31, 13)\\n    + (arp(t, 1/4, 38.5, 48, 40)\\n    + arp(t, 1/4, 35, 49, 40))\\n    * envelope(t, 1/4, 42, 42, 20) * 1\\n  kick = clip(kick, 1)\\n  return kick * .8\\n}\\n\\n// import arp from '/dsp/arp.js'\\n// import envelope from '/dsp/envelope/index.js'\\n// import clip from '/dsp/softclip/index.js'\\nimport Wavetable from '/dsp/wavetable-osc/index.js'\\n\\nexport const Hihat = async (context) => {\\n  var hihat = 0\\n  var hihat_osc = Wavetable(context, 'noise', 5000, true)\\n  var hihat_delay = Array(30000).fill(0)\\n\\n  return t => {\\n    hihat = hihat_osc(2)\\n    hihat *= arp(t, 1/16, 5200, 20, 70)\\n    //hihat *= envelope(t+1/16, 1/16, 100, 3.8, 8, 70)\\n    hihat = clip(hihat, .61)\\n    hihat *= arp(t, 1/4, 10100, 17, 1)\\n    hihat_delay.push(-hihat)\\n    hihat_delay.shift()\\n    return (\\n      + hihat\\n      + hihat_delay[98] * .8\\n      + hihat_delay[69] * .7\\n      - hihat_delay[25] * .5\\n      - hihat_delay[72] * .7\\n    ) * .3\\n  }\\n}\\n\\n`BASS`\\n\\n\\n\\nimport note from '/dsp/note/index.js'\\n// import arp from '/dsp/arp.js'\\n// import clip from '/dsp/softclip/index.js'\\n// import { sin } from '/dsp/osc/index.js'\\n// import Wavetable from '/dsp/wavetable-osc/index.js'\\n\\nexport var bassline = [\\n  // 'c1','c1','f#1','b0',\\n  // 'c1','c1','f#1','b0',\\n  'd#0','d#0','f1','b2',\\n  'd#1','d#1','f4','b3',\\n  // 'e0','e0','a0','c0',\\n].map(note)//.reverse()\\n\\nvar bass_synth = (t, osc, hz) => {\\n  hz *= 1\\n  var out = (\\n    + osc(hz) * .78\\n    + saw(t, hz*1.6) * 2.33\\n    + saw(t, hz*1.004) * .42\\n    + saw(t, hz/2) * .62\\n    + sin(t, hz) * 2.3\\n  )\\n  out = out * (arp(t+1.5, 1/16, .5, 130 + sin(t, 2.05) * 120, 4) * arp(t+1.5, 1/4, 2, 6, 2))\\n  return out\\n}\\n\\nexport const Bass = async (context) => {\\n  var bass = 0\\n  var bass_osc = Wavetable(context, 'saw', 120, true)\\n  var bass_delay = Array(70).fill(0)\\n\\n  return t => {\\n    var bass_hz = bassline[Math.floor( (t*4) % 8 )]*2\\n    bass = bass_synth(t, bass_osc, bass_hz)\\n    bass_delay.push(-bass)\\n    bass_delay.shift()\\n\\n    return clip(0\\n      + bass\\n      - bass_delay[2+Math.floor(t%5)]\\n      - bass_delay[Math.floor(t%18)]\\n      + bass_delay[56] * .7\\n      // - bass_delay[10]\\n      - bass_delay[22] * .2\\n      + bass_delay[48] * .4\\n      // - bass_delay[46]\\n      // - bass_delay[34]\\n      // - bass_delay[44]\\n      , .18) * .13\\n  }\\n}\",\"controlEditor\":{\"id\":\"39jpk\",\"title\":\"demo-4\"}}"}