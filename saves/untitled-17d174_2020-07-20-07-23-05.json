{
  "editors": "[\"5napq\",\"4e4mz\",\"13kk2\",\"3iew1\"]",
  "editor_5napq": "{\"id\":\"5napq\",\"title\":\"untitled-17d174\",\"value\":\"import { sin } from '/dsp/osc/index.js'\\nimport clip from '/dsp/softclip/index.js'\\nimport arp from '/dsp/arp.js'\\nimport envelope from '/dsp/envelope/index.js'\\nimport Reverb from '/dsp/freeverb/index.js'\\n\\nexport const bars = 4\\n\\nexport default async (context) => {\\n  const { beat } = context.lengths\\n  const reverb = await Reverb(context)\\n\\n  return mix => mix(\\n    t => kick(t) * ((t%8) < 7),\\n    t => {\\n      const kickSlice = t.output[0].slice(0,beat)\\n      t.output[0].set(kickSlice.slice(0,-(beat*(1/2))), beat*(7+1/2))\\n      t.output[0].set(reverse(t).slice(-beat+10), t.output[0].length - beat)\\n      return t.output[0]\\n    },\\n    t => reverb(t, { feedback: .8, damp: .2, wet: .33 })*3\\n  )\\n}\\n\\nconst reverse = t => t.output[0].slice().reverse()\\n\\nexport const kick = t => {\\n  var kick =\\n    + sin(t, 19.5) * arp(t, 1/4, 37, 31, 13)\\n    + (arp(t, 1/4, 38.5, 48, 40)\\n    + arp(t, 1/4, 35, 49, 40))\\n    * envelope(t, 1/4, 42, 42, 20) * 1\\n  kick = clip(kick, 1)\\n  return kick * .8\\n}\\n\",\"controlEditor\":{\"id\":\"5napq\",\"title\":\"untitled-17d174\"}}",
  "editor_4e4mz": "{\"id\":\"4e4mz\",\"title\":\"untitled-5c0721\",\"value\":\"import clip from '/dsp/softclip/index.js'\\nimport { sin } from '/dsp/osc/index.js'\\nimport arp from '/dsp/arp.js'\\nimport envelope from '/dsp/envelope/index.js'\\nimport Wavetable from '/dsp/wavetable-osc/index.js'\\nimport Reverb from '/dsp/freeverb/index.js'\\nimport stereoify from '/dsp/stereoify.js'\\n\\nexport const channels = 2\\n\\nexport default async (context) => {\\n  const ch = await Hihat(context, 1/16, 350)\\n  const oh = await Hihat(context, 1/4, 124)\\n  const reverb = await Reverb(context)\\n \\n  return mix => mix(\\n    t =>\\n      + ch(t)*(sin(t,6)*1)*2.8\\n      + oh(t+1/2)*3.7,\\n    t => reverb(t, { feedback: .2, damp: .2, wet: .27 }),\\n    t => stereoify(t)\\n  )\\n}\\n\\nexport const Hihat = async (context, rate = 1/4, decay = 70) => {\\n  var hihat = 0\\n  var hihat_osc = Wavetable(context, 'noise', 30100, true)\\n  var hihat_delay = Array(100).fill(0)\\n\\n  return t => {\\n    hihat = hihat_osc(1.2)\\n    hihat *= arp(t, rate, 220, 60, decay)\\n    hihat = clip(hihat, .71)\\n    hihat *= arp(t, 1/16, 12000, 12.6, 60)\\n    hihat_delay.push(-hihat)\\n    hihat_delay.shift()\\n    return (\\n      + hihat\\n      + hihat_delay[98] * .8\\n      + hihat_delay[69] * .7\\n      // - hihat_delay[25] * .5\\n      - hihat_delay[72] * .8\\n    ) * .3\\n  }\\n}\\n\",\"controlEditor\":{\"id\":\"4e4mz\",\"title\":\"untitled-5c0721\"}}",
  "editor_13kk2": "{\"id\":\"13kk2\",\"title\":\"untitled-c048ac\",\"value\":\"import DiodeFilter from '/dsp/diodefilter/index.js'\\nimport Wavetable from '/dsp/wavetable-osc/index.js'\\nimport stereoify from '/dsp/stereoify.js'\\nimport sequence from '/dsp/sequence.js'\\nimport slide from '/dsp/slide.js'\\nimport note from '/dsp/note/index.js'\\nimport clip from '/dsp/softclip/index.js'\\nimport arp from '/dsp/arp.js'\\n\\nexport const channels = 2\\nexport const bars = 4\\n\\nconst Melody = [7,4,8].map(n => note(n+15))\\n\\nexport default async (context) => {\\n  const bass = await Bass(context)\\n \\n  return mix => mix(\\n    t => t/4 < 2 \\n      ? bass(t, { cut: 0.072 })*.7 \\n      : bass(t, { cut: 0.062 })*.75,\\n    t => stereoify(t)\\n  )\\n}\\n\\nexport const Bass = (context, { \\n  res = 0.88, \\n  hpf = .003, \\n  melody = Melody \\n} = {}) => {\\n  var filter = new DiodeFilter()\\n\\n  var osc = Wavetable(context, 'saw', 1024);\\n  var lfo = Wavetable(context, 'sin', 512);\\n  var lfo2 = Wavetable(context, 'sin', 512);\\n\\n  return (t, { cut = 0.072, res = 0.68, hpf = .00009 } = {}) => {\\n    filter.res(res)\\n    filter.hpf(hpf)\\n    filter.cut(cut + lfo(1.33)*.0055)\\n    // ((lfo(1) * .6 + 1.2) / 2) \\n  // * (0.370 + lfo2(.02) * 0.04))\\n\\n    var n = slide(t, 1/8, 2, melody)\\n\\n    var synth_osc = osc(n)\\n    var synth = arp(t+.6, 1/2, synth_osc, 3, 2.15)\\n\\n    synth = filter.run(synth * .6)\\n    synth = clip(synth * 5)\\n\\n    return 0.5 * synth\\n  }\\n}\\n\",\"controlEditor\":{\"id\":\"13kk2\",\"title\":\"untitled-c048ac\"}}",
  "editor_3iew1": "{\"id\":\"3iew1\",\"title\":\"untitled-11495e\",\"value\":\"import clip from '/dsp/softclip/index.js'\\nimport { saw, sin, sqr } from '/dsp/osc/index.js'\\nimport arp from '/dsp/arp.js'\\nimport envelope from '/dsp/envelope/index.js'\\nimport { Filter, lowpass, highpass } from '/dsp/biquad.js'\\nimport note from '/dsp/note/index.js'\\nimport slide from '/dsp/slide.js'\\nimport stereoify from '/dsp/stereoify.js'\\n\\nconst Melody = [7,4,8].map(n => note(n+15))\\n\\nexport const channels = 2\\nexport const bars = 4\\n\\nexport default async (context) => {\\n  const filter = await Filter(context)\\n  let n = 0\\n  const hpf = highpass(context, { cut: 260, res: .7 })\\n  return mix => mix(\\n    t => {\\n      n = slide(t*4, 2, 1, Melody)\\n      return 0\\n        + saw(t, n) * .13\\n        + sqr(t, n*1.26) * .07\\n    },\\n    t => filter(t, lowpass(t, { cut: 400 + (340 * sin(t, 1/4)), res: 7.99 })),\\n    t => filter(t, hpf),\\n    t => stereoify(t),\\n  )\\n}\\n\",\"controlEditor\":{\"id\":\"3iew1\",\"title\":\"untitled-11495e\"}}"
}